{"version":3,"sources":["turbopack:///[project]/src/app/kyc/page.tsx","turbopack:///[project]/node_modules/@heroicons/react/24/outline/esm/CameraIcon.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { z } from \"zod\";\r\nimport { \r\n  IdentificationIcon,\r\n  DocumentTextIcon,\r\n  CameraIcon,\r\n  CheckCircleIcon,\r\n  XMarkIcon,\r\n  ArrowRightIcon,\r\n  ShieldCheckIcon,\r\n  CreditCardIcon,\r\n  FingerPrintIcon,\r\n  EyeIcon\r\n} from \"@heroicons/react/24/outline\";\r\n\r\n// KYC form validation schema\r\nconst kycSchema = z.object({\r\n  // Aadhaar Verification\r\n  aadhaarNumber: z.string()\r\n    .min(12, \"Aadhaar number must be 12 digits\")\r\n    .max(12, \"Aadhaar number must be 12 digits\")\r\n    .regex(/^\\d{12}$/, \"Aadhaar number must contain only digits\"),\r\n  aadhaarName: z.string().min(2, \"Name as per Aadhaar is required\"),\r\n  \r\n  // PAN Verification\r\n  panNumber: z.string()\r\n    .min(10, \"PAN number must be 10 characters\")\r\n    .max(10, \"PAN number must be 10 characters\")\r\n    .regex(/^[A-Z]{5}[0-9]{4}[A-Z]{1}$/, \"Invalid PAN format\"),\r\n  panName: z.string().min(2, \"Name as per PAN is required\"),\r\n  \r\n  // Personal Details\r\n  dateOfBirth: z.string().min(1, \"Date of birth is required\"),\r\n  gender: z.string().min(1, \"Gender is required\"),\r\n  fatherName: z.string().min(2, \"Father's name is required\"),\r\n  \r\n  // Address Details\r\n  addressLine1: z.string().min(5, \"Address line 1 is required\"),\r\n  addressLine2: z.string().optional(),\r\n  city: z.string().min(2, \"City is required\"),\r\n  state: z.string().min(2, \"State is required\"),\r\n  pincode: z.string()\r\n    .min(6, \"Pincode must be 6 digits\")\r\n    .max(6, \"Pincode must be 6 digits\")\r\n    .regex(/^\\d{6}$/, \"Pincode must contain only digits\"),\r\n  \r\n  // Bank Details\r\n  bankAccountNumber: z.string().min(9, \"Bank account number is required\"),\r\n  ifscCode: z.string()\r\n    .min(11, \"IFSC code must be 11 characters\")\r\n    .max(11, \"IFSC code must be 11 characters\")\r\n    .regex(/^[A-Z]{4}0[A-Z0-9]{6}$/, \"Invalid IFSC format\"),\r\n  bankName: z.string().min(2, \"Bank name is required\"),\r\n  \r\n  // Consent\r\n  consentAadhaar: z.boolean().refine(val => val === true, \"Aadhaar consent is required\"),\r\n  consentPAN: z.boolean().refine(val => val === true, \"PAN consent is required\"),\r\n  consentCreditCheck: z.boolean().refine(val => val === true, \"Credit check consent is required\")\r\n});\r\n\r\n// Mock Aadhaar database (simulating government API)\r\nconst mockAadhaarDB = {\r\n  \"123456789012\": {\r\n    name: \"Rajesh Kumar Singh\",\r\n    dob: \"1985-06-15\",\r\n    gender: \"Male\",\r\n    fatherName: \"Ram Kumar Singh\",\r\n    address: \"123 MG Road, Sector 5, New Delhi, 110001\",\r\n    isValid: true\r\n  },\r\n  \"987654321098\": {\r\n    name: \"Priya Sharma\",\r\n    dob: \"1990-08-22\",\r\n    gender: \"Female\", \r\n    fatherName: \"Ashok Sharma\",\r\n    address: \"456 Park Street, Andheri West, Mumbai, 400058\",\r\n    isValid: true\r\n  },\r\n  \"456789123456\": {\r\n    name: \"Amit Patel\",\r\n    dob: \"1988-03-10\",\r\n    gender: \"Male\",\r\n    fatherName: \"Kiran Patel\", \r\n    address: \"789 SG Highway, Ahmedabad, Gujarat, 380015\",\r\n    isValid: true\r\n  }\r\n};\r\n\r\n// Mock PAN database\r\nconst mockPANDB = {\r\n  \"ABCDE1234F\": {\r\n    name: \"RAJESH KUMAR SINGH\",\r\n    fatherName: \"RAM KUMAR SINGH\",\r\n    dob: \"15/06/1985\",\r\n    isValid: true\r\n  },\r\n  \"FGHIJ5678K\": {\r\n    name: \"PRIYA SHARMA\",\r\n    fatherName: \"ASHOK SHARMA\", \r\n    dob: \"22/08/1990\",\r\n    isValid: true\r\n  },\r\n  \"KLMNO9012P\": {\r\n    name: \"AMIT PATEL\",\r\n    fatherName: \"KIRAN PATEL\",\r\n    dob: \"10/03/1988\",\r\n    isValid: true\r\n  }\r\n};\r\n\r\nexport default function KYCVerificationPage() {\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [verificationStatus, setVerificationStatus] = useState<any>({});\r\n  const [uploadedFiles, setUploadedFiles] = useState<any>({});\r\n  const [biometricData, setBiometricData] = useState<any>({});\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  \r\n  const fileInputRefs = {\r\n    aadhaarFront: useRef<HTMLInputElement>(null),\r\n    aadhaarBack: useRef<HTMLInputElement>(null),\r\n    panCard: useRef<HTMLInputElement>(null),\r\n    selfie: useRef<HTMLInputElement>(null),\r\n    signature: useRef<HTMLInputElement>(null)\r\n  };\r\n\r\n  const { register, handleSubmit, watch, setValue, formState: { errors } } = useForm({\r\n    resolver: zodResolver(kycSchema),\r\n    defaultValues: {\r\n      consentAadhaar: false,\r\n      consentPAN: false,\r\n      consentCreditCheck: false\r\n    }\r\n  });\r\n\r\n  const watchedValues = watch();\r\n\r\n  // Mock Aadhaar verification\r\n  const verifyAadhaar = async (aadhaarNumber: string) => {\r\n    setIsProcessing(true);\r\n    \r\n    // Simulate API call delay\r\n    await new Promise(resolve => setTimeout(resolve, 2000));\r\n    \r\n    const aadhaarData = mockAadhaarDB[aadhaarNumber as keyof typeof mockAadhaarDB];\r\n    \r\n    if (aadhaarData) {\r\n      setVerificationStatus(prev => ({\r\n        ...prev,\r\n        aadhaar: { status: 'verified', data: aadhaarData }\r\n      }));\r\n      \r\n      // Auto-fill form with Aadhaar data\r\n      setValue('aadhaarName', aadhaarData.name);\r\n      setValue('dateOfBirth', aadhaarData.dob);\r\n      setValue('gender', aadhaarData.gender);\r\n      setValue('fatherName', aadhaarData.fatherName);\r\n      \r\n      // Extract address components\r\n      const addressParts = aadhaarData.address.split(', ');\r\n      setValue('addressLine1', addressParts[0] || '');\r\n      setValue('city', addressParts[1] || '');\r\n      setValue('state', addressParts[2] || '');\r\n      setValue('pincode', addressParts[3] || '');\r\n    } else {\r\n      setVerificationStatus(prev => ({\r\n        ...prev,\r\n        aadhaar: { status: 'failed', error: 'Aadhaar number not found' }\r\n      }));\r\n    }\r\n    \r\n    setIsProcessing(false);\r\n  };\r\n\r\n  // Mock PAN verification\r\n  const verifyPAN = async (panNumber: string) => {\r\n    setIsProcessing(true);\r\n    \r\n    await new Promise(resolve => setTimeout(resolve, 1500));\r\n    \r\n    const panData = mockPANDB[panNumber as keyof typeof mockPANDB];\r\n    \r\n    if (panData) {\r\n      setVerificationStatus(prev => ({\r\n        ...prev,\r\n        pan: { status: 'verified', data: panData }\r\n      }));\r\n      \r\n      setValue('panName', panData.name);\r\n    } else {\r\n      setVerificationStatus(prev => ({\r\n        ...prev,\r\n        pan: { status: 'failed', error: 'PAN number not found' }\r\n      }));\r\n    }\r\n    \r\n    setIsProcessing(false);\r\n  };\r\n\r\n  // Handle file uploads\r\n  const handleFileUpload = (fileType: string, file: File) => {\r\n    setUploadedFiles(prev => ({\r\n      ...prev,\r\n      [fileType]: {\r\n        name: file.name,\r\n        size: file.size,\r\n        type: file.type,\r\n        lastModified: file.lastModified,\r\n        url: URL.createObjectURL(file)\r\n      }\r\n    }));\r\n  };\r\n\r\n  // Mock biometric capture\r\n  const captureBiometric = (type: 'fingerprint' | 'iris') => {\r\n    setBiometricData(prev => ({\r\n      ...prev,\r\n      [type]: {\r\n        captured: true,\r\n        timestamp: new Date().toISOString(),\r\n        quality: Math.floor(Math.random() * 20) + 80 // 80-100%\r\n      }\r\n    }));\r\n  };\r\n\r\n  const onSubmit = async (data: any) => {\r\n    console.log(\"KYC Data:\", { ...data, uploadedFiles, biometricData });\r\n    alert(\"KYC verification completed successfully! Your profile will be updated shortly.\");\r\n  };\r\n\r\n  const nextStep = () => {\r\n    if (currentStep < 4) setCurrentStep(currentStep + 1);\r\n  };\r\n\r\n  const prevStep = () => {\r\n    if (currentStep > 1) setCurrentStep(currentStep - 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <div className=\"bg-gradient-to-r from-blue-600 to-indigo-700 text-white\">\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-3xl font-bold flex items-center justify-center\">\r\n              <ShieldCheckIcon className=\"h-8 w-8 mr-3\" />\r\n              KYC Verification\r\n            </h1>\r\n            <p className=\"text-blue-100 mt-2\">Complete your Know Your Customer verification for secure lending</p>\r\n          </div>\r\n          \r\n          {/* Progress Bar */}\r\n          <div className=\"mt-8\">\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n              {[1, 2, 3, 4].map((step) => (\r\n                <div key={step} className=\"flex items-center\">\r\n                  <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-semibold ${\r\n                    currentStep >= step ? 'bg-yellow-400 text-gray-900' : 'bg-blue-800 text-blue-300'\r\n                  }`}>\r\n                    {currentStep > step ? <CheckCircleIcon className=\"h-5 w-5\" /> : step}\r\n                  </div>\r\n                  {step < 4 && (\r\n                    <div className={`flex-1 h-1 mx-4 ${\r\n                      currentStep > step ? 'bg-yellow-400' : 'bg-blue-800'\r\n                    }`} />\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"flex justify-between text-sm text-blue-100\">\r\n              <span>Identity Verification</span>\r\n              <span>Document Upload</span>\r\n              <span>Biometric Verification</span>\r\n              <span>Complete</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {/* Step 1: Identity Verification */}\r\n        {currentStep === 1 && (\r\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\r\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6 flex items-center\">\r\n              <IdentificationIcon className=\"h-6 w-6 mr-2\" />\r\n              Identity Verification\r\n            </h2>\r\n            \r\n            {/* Aadhaar Verification */}\r\n            <div className=\"mb-8 p-6 border border-gray-200 rounded-lg\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\r\n                <CreditCardIcon className=\"h-5 w-5 mr-2\" />\r\n                Aadhaar Verification\r\n              </h3>\r\n              \r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Aadhaar Number *\r\n                  </label>\r\n                  <div className=\"flex\">\r\n                    <input\r\n                      type=\"text\"\r\n                      {...register(\"aadhaarNumber\")}\r\n                      className=\"flex-1 px-3 py-2 border border-gray-300 rounded-l-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                      placeholder=\"XXXX XXXX XXXX\"\r\n                      maxLength={12}\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => verifyAadhaar(watchedValues.aadhaarNumber)}\r\n                      disabled={!watchedValues.aadhaarNumber || isProcessing}\r\n                      className=\"px-4 py-2 bg-blue-600 text-white rounded-r-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed\"\r\n                    >\r\n                      {isProcessing ? 'Verifying...' : 'Verify'}\r\n                    </button>\r\n                  </div>\r\n                  {errors.aadhaarNumber && (\r\n                    <p className=\"text-red-500 text-sm mt-1\">{errors.aadhaarNumber.message}</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Name as per Aadhaar *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    {...register(\"aadhaarName\")}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                    readOnly={verificationStatus.aadhaar?.status === 'verified'}\r\n                  />\r\n                  {errors.aadhaarName && (\r\n                    <p className=\"text-red-500 text-sm mt-1\">{errors.aadhaarName.message}</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {verificationStatus.aadhaar && (\r\n                <div className={`p-3 rounded-lg mb-4 ${\r\n                  verificationStatus.aadhaar.status === 'verified' \r\n                    ? 'bg-green-50 border border-green-200' \r\n                    : 'bg-red-50 border border-red-200'\r\n                }`}>\r\n                  <div className=\"flex items-center\">\r\n                    {verificationStatus.aadhaar.status === 'verified' ? (\r\n                      <CheckCircleIcon className=\"h-5 w-5 text-green-500 mr-2\" />\r\n                    ) : (\r\n                      <XMarkIcon className=\"h-5 w-5 text-red-500 mr-2\" />\r\n                    )}\r\n                    <span className={`text-sm ${\r\n                      verificationStatus.aadhaar.status === 'verified' ? 'text-green-700' : 'text-red-700'\r\n                    }`}>\r\n                      {verificationStatus.aadhaar.status === 'verified' \r\n                        ? 'Aadhaar verified successfully!' \r\n                        : verificationStatus.aadhaar.error}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"flex items-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  {...register(\"consentAadhaar\")}\r\n                  className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\r\n                />\r\n                <label className=\"ml-2 text-sm text-gray-700\">\r\n                  I consent to Aadhaar verification and data sharing as per UIDAI guidelines\r\n                </label>\r\n              </div>\r\n              {errors.consentAadhaar && (\r\n                <p className=\"text-red-500 text-sm mt-1\">{errors.consentAadhaar.message}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* PAN Verification */}\r\n            <div className=\"mb-8 p-6 border border-gray-200 rounded-lg\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\r\n                <DocumentTextIcon className=\"h-5 w-5 mr-2\" />\r\n                PAN Verification\r\n              </h3>\r\n              \r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    PAN Number *\r\n                  </label>\r\n                  <div className=\"flex\">\r\n                    <input\r\n                      type=\"text\"\r\n                      {...register(\"panNumber\")}\r\n                      className=\"flex-1 px-3 py-2 border border-gray-300 rounded-l-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent uppercase\"\r\n                      placeholder=\"ABCDE1234F\"\r\n                      maxLength={10}\r\n                    />\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => verifyPAN(watchedValues.panNumber)}\r\n                      disabled={!watchedValues.panNumber || isProcessing}\r\n                      className=\"px-4 py-2 bg-blue-600 text-white rounded-r-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed\"\r\n                    >\r\n                      {isProcessing ? 'Verifying...' : 'Verify'}\r\n                    </button>\r\n                  </div>\r\n                  {errors.panNumber && (\r\n                    <p className=\"text-red-500 text-sm mt-1\">{errors.panNumber.message}</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Name as per PAN *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    {...register(\"panName\")}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                    readOnly={verificationStatus.pan?.status === 'verified'}\r\n                  />\r\n                  {errors.panName && (\r\n                    <p className=\"text-red-500 text-sm mt-1\">{errors.panName.message}</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {verificationStatus.pan && (\r\n                <div className={`p-3 rounded-lg mb-4 ${\r\n                  verificationStatus.pan.status === 'verified' \r\n                    ? 'bg-green-50 border border-green-200' \r\n                    : 'bg-red-50 border border-red-200'\r\n                }`}>\r\n                  <div className=\"flex items-center\">\r\n                    {verificationStatus.pan.status === 'verified' ? (\r\n                      <CheckCircleIcon className=\"h-5 w-5 text-green-500 mr-2\" />\r\n                    ) : (\r\n                      <XMarkIcon className=\"h-5 w-5 text-red-500 mr-2\" />\r\n                    )}\r\n                    <span className={`text-sm ${\r\n                      verificationStatus.pan.status === 'verified' ? 'text-green-700' : 'text-red-700'\r\n                    }`}>\r\n                      {verificationStatus.pan.status === 'verified' \r\n                        ? 'PAN verified successfully!' \r\n                        : verificationStatus.pan.error}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"flex items-center\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  {...register(\"consentPAN\")}\r\n                  className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\r\n                />\r\n                <label className=\"ml-2 text-sm text-gray-700\">\r\n                  I consent to PAN verification and income tax data sharing\r\n                </label>\r\n              </div>\r\n              {errors.consentPAN && (\r\n                <p className=\"text-red-500 text-sm mt-1\">{errors.consentPAN.message}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Demo Instructions */}\r\n            <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-6\">\r\n              <h4 className=\"font-semibold text-yellow-800 mb-2\">Demo Instructions</h4>\r\n              <p className=\"text-yellow-700 text-sm mb-2\">Use these sample numbers for testing:</p>\r\n              <div className=\"text-sm text-yellow-700 space-y-1\">\r\n                <div><strong>Aadhaar:</strong> 123456789012 (Rajesh Kumar Singh)</div>\r\n                <div><strong>PAN:</strong> ABCDE1234F (matches above Aadhaar)</div>\r\n                <div className=\"text-xs mt-2\">More combinations available: 987654321098/FGHIJ5678K, 456789123456/KLMNO9012P</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-end\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={nextStep}\r\n                disabled={!verificationStatus.aadhaar?.status === 'verified' || !verificationStatus.pan?.status === 'verified'}\r\n                className=\"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed flex items-center font-semibold\"\r\n              >\r\n                Continue to Documents\r\n                <ArrowRightIcon className=\"ml-2 h-5 w-5\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Step 2: Document Upload */}\r\n        {currentStep === 2 && (\r\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\r\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6 flex items-center\">\r\n              <DocumentTextIcon className=\"h-6 w-6 mr-2\" />\r\n              Document Upload & Verification\r\n            </h2>\r\n            \r\n            <div className=\"space-y-6\">\r\n              {/* Aadhaar Documents */}\r\n              <div className=\"p-6 border border-gray-200 rounded-lg\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Aadhaar Card</h3>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Front Side *</label>\r\n                    <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-4 text-center hover:border-gray-400 transition-colors\">\r\n                      {uploadedFiles.aadhaarFront ? (\r\n                        <div className=\"space-y-2\">\r\n                          <CheckCircleIcon className=\"h-8 w-8 text-green-500 mx-auto\" />\r\n                          <p className=\"text-sm text-gray-600\">{uploadedFiles.aadhaarFront.name}</p>\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => setUploadedFiles(prev => ({ ...prev, aadhaarFront: null }))}\r\n                            className=\"text-red-600 hover:text-red-700 text-sm\"\r\n                          >\r\n                            Remove\r\n                          </button>\r\n                        </div>\r\n                      ) : (\r\n                        <div>\r\n                          <CameraIcon className=\"h-8 w-8 text-gray-400 mx-auto mb-2\" />\r\n                          <p className=\"text-sm text-gray-600 mb-2\">Upload Aadhaar Front</p>\r\n                          <input\r\n                            ref={fileInputRefs.aadhaarFront}\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={(e) => e.target.files?.[0] && handleFileUpload('aadhaarFront', e.target.files[0])}\r\n                            className=\"hidden\"\r\n                          />\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => fileInputRefs.aadhaarFront.current?.click()}\r\n                            className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 text-sm\"\r\n                          >\r\n                            Choose File\r\n                          </button>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Back Side *</label>\r\n                    <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-4 text-center hover:border-gray-400 transition-colors\">\r\n                      {uploadedFiles.aadhaarBack ? (\r\n                        <div className=\"space-y-2\">\r\n                          <CheckCircleIcon className=\"h-8 w-8 text-green-500 mx-auto\" />\r\n                          <p className=\"text-sm text-gray-600\">{uploadedFiles.aadhaarBack.name}</p>\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => setUploadedFiles(prev => ({ ...prev, aadhaarBack: null }))}\r\n                            className=\"text-red-600 hover:text-red-700 text-sm\"\r\n                          >\r\n                            Remove\r\n                          </button>\r\n                        </div>\r\n                      ) : (\r\n                        <div>\r\n                          <CameraIcon className=\"h-8 w-8 text-gray-400 mx-auto mb-2\" />\r\n                          <p className=\"text-sm text-gray-600 mb-2\">Upload Aadhaar Back</p>\r\n                          <input\r\n                            ref={fileInputRefs.aadhaarBack}\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={(e) => e.target.files?.[0] && handleFileUpload('aadhaarBack', e.target.files[0])}\r\n                            className=\"hidden\"\r\n                          />\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => fileInputRefs.aadhaarBack.current?.click()}\r\n                            className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 text-sm\"\r\n                          >\r\n                            Choose File\r\n                          </button>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* PAN Card */}\r\n              <div className=\"p-6 border border-gray-200 rounded-lg\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">PAN Card</h3>\r\n                <div className=\"max-w-md\">\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">PAN Card Image *</label>\r\n                  <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-4 text-center hover:border-gray-400 transition-colors\">\r\n                    {uploadedFiles.panCard ? (\r\n                      <div className=\"space-y-2\">\r\n                        <CheckCircleIcon className=\"h-8 w-8 text-green-500 mx-auto\" />\r\n                        <p className=\"text-sm text-gray-600\">{uploadedFiles.panCard.name}</p>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => setUploadedFiles(prev => ({ ...prev, panCard: null }))}\r\n                          className=\"text-red-600 hover:text-red-700 text-sm\"\r\n                        >\r\n                          Remove\r\n                        </button>\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        <CameraIcon className=\"h-8 w-8 text-gray-400 mx-auto mb-2\" />\r\n                        <p className=\"text-sm text-gray-600 mb-2\">Upload PAN Card</p>\r\n                        <input\r\n                          ref={fileInputRefs.panCard}\r\n                          type=\"file\"\r\n                          accept=\"image/*\"\r\n                          onChange={(e) => e.target.files?.[0] && handleFileUpload('panCard', e.target.files[0])}\r\n                          className=\"hidden\"\r\n                        />\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => fileInputRefs.panCard.current?.click()}\r\n                          className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 text-sm\"\r\n                        >\r\n                          Choose File\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Selfie & Signature */}\r\n              <div className=\"p-6 border border-gray-200 rounded-lg\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Additional Verification</h3>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Live Selfie *</label>\r\n                    <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-4 text-center hover:border-gray-400 transition-colors\">\r\n                      {uploadedFiles.selfie ? (\r\n                        <div className=\"space-y-2\">\r\n                          <CheckCircleIcon className=\"h-8 w-8 text-green-500 mx-auto\" />\r\n                          <p className=\"text-sm text-gray-600\">{uploadedFiles.selfie.name}</p>\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => setUploadedFiles(prev => ({ ...prev, selfie: null }))}\r\n                            className=\"text-red-600 hover:text-red-700 text-sm\"\r\n                          >\r\n                            Remove\r\n                          </button>\r\n                        </div>\r\n                      ) : (\r\n                        <div>\r\n                          <CameraIcon className=\"h-8 w-8 text-gray-400 mx-auto mb-2\" />\r\n                          <p className=\"text-sm text-gray-600 mb-2\">Take Live Selfie</p>\r\n                          <input\r\n                            ref={fileInputRefs.selfie}\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            capture=\"user\"\r\n                            onChange={(e) => e.target.files?.[0] && handleFileUpload('selfie', e.target.files[0])}\r\n                            className=\"hidden\"\r\n                          />\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => fileInputRefs.selfie.current?.click()}\r\n                            className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 text-sm\"\r\n                          >\r\n                            Capture Selfie\r\n                          </button>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Signature *</label>\r\n                    <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-4 text-center hover:border-gray-400 transition-colors\">\r\n                      {uploadedFiles.signature ? (\r\n                        <div className=\"space-y-2\">\r\n                          <CheckCircleIcon className=\"h-8 w-8 text-green-500 mx-auto\" />\r\n                          <p className=\"text-sm text-gray-600\">{uploadedFiles.signature.name}</p>\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => setUploadedFiles(prev => ({ ...prev, signature: null }))}\r\n                            className=\"text-red-600 hover:text-red-700 text-sm\"\r\n                          >\r\n                            Remove\r\n                          </button>\r\n                        </div>\r\n                      ) : (\r\n                        <div>\r\n                          <DocumentTextIcon className=\"h-8 w-8 text-gray-400 mx-auto mb-2\" />\r\n                          <p className=\"text-sm text-gray-600 mb-2\">Upload Signature</p>\r\n                          <input\r\n                            ref={fileInputRefs.signature}\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={(e) => e.target.files?.[0] && handleFileUpload('signature', e.target.files[0])}\r\n                            className=\"hidden\"\r\n                          />\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => fileInputRefs.signature.current?.click()}\r\n                            className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 text-sm\"\r\n                          >\r\n                            Upload Signature\r\n                          </button>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-between mt-8\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={prevStep}\r\n                className=\"border border-gray-300 text-gray-700 px-6 py-3 rounded-lg hover:bg-gray-50 flex items-center font-semibold\"\r\n              >\r\n                Previous\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={nextStep}\r\n                disabled={!uploadedFiles.aadhaarFront || !uploadedFiles.aadhaarBack || !uploadedFiles.panCard || !uploadedFiles.selfie || !uploadedFiles.signature}\r\n                className=\"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed flex items-center font-semibold\"\r\n              >\r\n                Continue to Biometrics\r\n                <ArrowRightIcon className=\"ml-2 h-5 w-5\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Step 3: Biometric Verification */}\r\n        {currentStep === 3 && (\r\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\r\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6 flex items-center\">\r\n              <FingerPrintIcon className=\"h-6 w-6 mr-2\" />\r\n              Biometric Verification\r\n            </h2>\r\n            \r\n            <div className=\"space-y-8\">\r\n              {/* Fingerprint Capture */}\r\n              <div className=\"p-6 border border-gray-200 rounded-lg\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\r\n                  <FingerPrintIcon className=\"h-5 w-5 mr-2\" />\r\n                  Fingerprint Authentication\r\n                </h3>\r\n                <div className=\"text-center\">\r\n                  {biometricData.fingerprint ? (\r\n                    <div className=\"space-y-4\">\r\n                      <CheckCircleIcon className=\"h-16 w-16 text-green-500 mx-auto\" />\r\n                      <div>\r\n                        <p className=\"text-lg font-semibold text-green-700\">Fingerprint Captured Successfully</p>\r\n                        <p className=\"text-sm text-gray-600\">Quality: {biometricData.fingerprint.quality}%</p>\r\n                        <p className=\"text-xs text-gray-500\">Captured at: {new Date(biometricData.fingerprint.timestamp).toLocaleString()}</p>\r\n                      </div>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => setBiometricData(prev => ({ ...prev, fingerprint: null }))}\r\n                        className=\"text-blue-600 hover:text-blue-700 text-sm\"\r\n                      >\r\n                        Recapture Fingerprint\r\n                      </button>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"space-y-4\">\r\n                      <FingerPrintIcon className=\"h-16 w-16 text-gray-400 mx-auto\" />\r\n                      <div>\r\n                        <p className=\"text-lg font-semibold text-gray-900\">Place your finger on the scanner</p>\r\n                        <p className=\"text-sm text-gray-600\">Ensure your finger is clean and dry for best results</p>\r\n                      </div>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => captureBiometric('fingerprint')}\r\n                        className=\"bg-blue-600 text-white px-8 py-3 rounded-lg hover:bg-blue-700 font-semibold\"\r\n                      >\r\n                        Capture Fingerprint\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Iris Scan */}\r\n              <div className=\"p-6 border border-gray-200 rounded-lg\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\r\n                  <EyeIcon className=\"h-5 w-5 mr-2\" />\r\n                  Iris Recognition\r\n                </h3>\r\n                <div className=\"text-center\">\r\n                  {biometricData.iris ? (\r\n                    <div className=\"space-y-4\">\r\n                      <CheckCircleIcon className=\"h-16 w-16 text-green-500 mx-auto\" />\r\n                      <div>\r\n                        <p className=\"text-lg font-semibold text-green-700\">Iris Pattern Captured Successfully</p>\r\n                        <p className=\"text-sm text-gray-600\">Quality: {biometricData.iris.quality}%</p>\r\n                        <p className=\"text-xs text-gray-500\">Captured at: {new Date(biometricData.iris.timestamp).toLocaleString()}</p>\r\n                      </div>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => setBiometricData(prev => ({ ...prev, iris: null }))}\r\n                        className=\"text-blue-600 hover:text-blue-700 text-sm\"\r\n                      >\r\n                        Recapture Iris\r\n                      </button>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"space-y-4\">\r\n                      <EyeIcon className=\"h-16 w-16 text-gray-400 mx-auto\" />\r\n                      <div>\r\n                        <p className=\"text-lg font-semibold text-gray-900\">Look into the iris scanner</p>\r\n                        <p className=\"text-sm text-gray-600\">Keep your eyes open and look straight ahead</p>\r\n                      </div>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => captureBiometric('iris')}\r\n                        className=\"bg-green-600 text-white px-8 py-3 rounded-lg hover:bg-green-700 font-semibold\"\r\n                      >\r\n                        Capture Iris Pattern\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Credit Check Consent */}\r\n              <div className=\"p-6 border border-gray-200 rounded-lg\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Credit Assessment Authorization</h3>\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex items-start\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      {...register(\"consentCreditCheck\")}\r\n                      className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500 mt-1\"\r\n                    />\r\n                    <div className=\"ml-3\">\r\n                      <label className=\"text-sm text-gray-700\">\r\n                        I hereby authorize Fin-Agentix India and its partner institutions to:\r\n                      </label>\r\n                      <ul className=\"text-xs text-gray-600 mt-2 space-y-1 ml-4\">\r\n                        <li>• Access my credit information from CIBIL, Experian, Equifax, and CRIF High Mark</li>\r\n                        <li>• Verify my employment and income details</li>\r\n                        <li>• Check my banking history and transaction patterns</li>\r\n                        <li>• Perform ongoing monitoring for portfolio management</li>\r\n                        <li>• Share my information with authorized lending partners</li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                  {errors.consentCreditCheck && (\r\n                    <p className=\"text-red-500 text-sm\">{errors.consentCreditCheck.message}</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-between mt-8\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={prevStep}\r\n                className=\"border border-gray-300 text-gray-700 px-6 py-3 rounded-lg hover:bg-gray-50 flex items-center font-semibold\"\r\n              >\r\n                Previous\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={nextStep}\r\n                disabled={!biometricData.fingerprint || !biometricData.iris || !watchedValues.consentCreditCheck}\r\n                className=\"bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed flex items-center font-semibold\"\r\n              >\r\n                Final Review\r\n                <ArrowRightIcon className=\"ml-2 h-5 w-5\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Step 4: Final Review */}\r\n        {currentStep === 4 && (\r\n          <div className=\"bg-white rounded-xl shadow-lg p-8\">\r\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6 flex items-center\">\r\n              <CheckCircleIcon className=\"h-6 w-6 mr-2\" />\r\n              KYC Verification Complete\r\n            </h2>\r\n            \r\n            <div className=\"space-y-6\">\r\n              {/* Verification Summary */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\r\n                  <div className=\"flex items-center mb-2\">\r\n                    <CheckCircleIcon className=\"h-5 w-5 text-green-500 mr-2\" />\r\n                    <span className=\"font-semibold text-green-800\">Identity Verified</span>\r\n                  </div>\r\n                  <p className=\"text-sm text-green-700\">Aadhaar & PAN verification completed</p>\r\n                </div>\r\n\r\n                <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\r\n                  <div className=\"flex items-center mb-2\">\r\n                    <CheckCircleIcon className=\"h-5 w-5 text-green-500 mr-2\" />\r\n                    <span className=\"font-semibold text-green-800\">Documents Uploaded</span>\r\n                  </div>\r\n                  <p className=\"text-sm text-green-700\">All required documents submitted</p>\r\n                </div>\r\n\r\n                <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\r\n                  <div className=\"flex items-center mb-2\">\r\n                    <CheckCircleIcon className=\"h-5 w-5 text-green-500 mr-2\" />\r\n                    <span className=\"font-semibold text-green-800\">Biometrics Captured</span>\r\n                  </div>\r\n                  <p className=\"text-sm text-green-700\">Fingerprint & iris verification done</p>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Next Steps */}\r\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-6\">\r\n                <h3 className=\"text-lg font-semibold text-blue-900 mb-3\">What Happens Next?</h3>\r\n                <div className=\"space-y-2 text-sm text-blue-800\">\r\n                  <p>✓ Your KYC data will be processed within 24-48 hours</p>\r\n                  <p>✓ Credit assessment will be initiated automatically</p>\r\n                  <p>✓ You'll receive SMS and email updates on verification status</p>\r\n                  <p>✓ Once approved, you can access all loan products</p>\r\n                  <p>✓ Enhanced loan limits and better interest rates will be unlocked</p>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Contact Information */}\r\n              <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-6\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">Need Assistance?</h3>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-gray-700\">\r\n                  <div>\r\n                    <p><strong>Customer Support:</strong></p>\r\n                    <p>📞 1800-FINAGENIX (24/7)</p>\r\n                    <p>📧 kyc@finagenix.com</p>\r\n                  </div>\r\n                  <div>\r\n                    <p><strong>KYC Helpdesk:</strong></p>\r\n                    <p>💬 Live chat available</p>\r\n                    <p>🕒 Mon-Sat: 9 AM - 9 PM</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-between mt-8\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={prevStep}\r\n                className=\"border border-gray-300 text-gray-700 px-6 py-3 rounded-lg hover:bg-gray-50 flex items-center font-semibold\"\r\n              >\r\n                Previous\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"bg-green-600 text-white px-8 py-3 rounded-lg hover:bg-green-700 flex items-center font-semibold\"\r\n              >\r\n                Complete KYC Verification\r\n                <CheckCircleIcon className=\"ml-2 h-5 w-5\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}","import * as React from \"react\";\nfunction CameraIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M6.827 6.175A2.31 2.31 0 0 1 5.186 7.23c-.38.054-.757.112-1.134.175C2.999 7.58 2.25 8.507 2.25 9.574V18a2.25 2.25 0 0 0 2.25 2.25h15A2.25 2.25 0 0 0 21.75 18V9.574c0-1.067-.75-1.994-1.802-2.169a47.865 47.865 0 0 0-1.134-.175 2.31 2.31 0 0 1-1.64-1.055l-.822-1.316a2.192 2.192 0 0 0-1.736-1.039 48.774 48.774 0 0 0-5.232 0 2.192 2.192 0 0 0-1.736 1.039l-.821 1.316Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M16.5 12.75a4.5 4.5 0 1 1-9 0 4.5 4.5 0 0 1 9 0ZM18.75 10.5h.008v.008h-.008V10.5Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CameraIcon);\nexport default ForwardRef;"],"names":[],"mappings":"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","ignoreList":[1]}