{"version":3,"sources":["turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js","turbopack:///[project]/src/app/api/aadhaar/verify/route.ts"],"sourcesContent":["import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/aadhaar/verify/route\",\n        pathname: \"/api/aadhaar/verify\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/src/app/api/aadhaar/verify/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/aadhaar/verify/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n","import { NextRequest, NextResponse } from 'next/server';\r\n\r\n// Mock Aadhaar database with synthetic data\r\nconst mockAadhaarDB = {\r\n  \"123456789012\": {\r\n    aadhaarNumber: \"123456789012\",\r\n    name: \"Rajesh Kumar Singh\",\r\n    dateOfBirth: \"1985-06-15\",\r\n    gender: \"Male\",\r\n    fatherName: \"Ram Kumar Singh\",\r\n    address: {\r\n      houseNumber: \"123\",\r\n      street: \"MG Road\",\r\n      area: \"Sector 5\",\r\n      city: \"New Delhi\",\r\n      state: \"Delhi\",\r\n      pincode: \"110001\"\r\n    },\r\n    mobileNumber: \"+91-9876543210\",\r\n    email: \"rajesh.kumar@email.com\",\r\n    photo: \"/api/placeholder/aadhaar-photo\",\r\n    isValid: true,\r\n    lastUpdated: \"2023-12-15\"\r\n  },\r\n  \"987654321098\": {\r\n    aadhaarNumber: \"987654321098\",\r\n    name: \"Priya Sharma\",\r\n    dateOfBirth: \"1990-08-22\",\r\n    gender: \"Female\",\r\n    fatherName: \"Ashok Sharma\",\r\n    address: {\r\n      houseNumber: \"456\",\r\n      street: \"Park Street\",\r\n      area: \"Andheri West\",\r\n      city: \"Mumbai\",\r\n      state: \"Maharashtra\",\r\n      pincode: \"400058\"\r\n    },\r\n    mobileNumber: \"+91-9876543211\",\r\n    email: \"priya.sharma@email.com\",\r\n    photo: \"/api/placeholder/aadhaar-photo\",\r\n    isValid: true,\r\n    lastUpdated: \"2023-11-20\"\r\n  },\r\n  \"456789123456\": {\r\n    aadhaarNumber: \"456789123456\",\r\n    name: \"Amit Patel\",\r\n    dateOfBirth: \"1988-03-10\",\r\n    gender: \"Male\",\r\n    fatherName: \"Kiran Patel\",\r\n    address: {\r\n      houseNumber: \"789\",\r\n      street: \"SG Highway\",\r\n      area: \"Satellite\",\r\n      city: \"Ahmedabad\",\r\n      state: \"Gujarat\",\r\n      pincode: \"380015\"\r\n    },\r\n    mobileNumber: \"+91-9876543212\",\r\n    email: \"amit.patel@email.com\",\r\n    photo: \"/api/placeholder/aadhaar-photo\",\r\n    isValid: true,\r\n    lastUpdated: \"2023-10-05\"\r\n  },\r\n  \"789123456789\": {\r\n    aadhaarNumber: \"789123456789\",\r\n    name: \"Sunita Devi\",\r\n    dateOfBirth: \"1975-12-03\",\r\n    gender: \"Female\",\r\n    fatherName: \"Ramesh Singh\",\r\n    address: {\r\n      houseNumber: \"45\",\r\n      street: \"Village Road\",\r\n      area: \"Khetri\",\r\n      city: \"Sikar\",\r\n      state: \"Rajasthan\",\r\n      pincode: \"332027\"\r\n    },\r\n    mobileNumber: \"+91-9876543213\",\r\n    email: \"sunita.devi@email.com\",\r\n    photo: \"/api/placeholder/aadhaar-photo\",\r\n    isValid: true,\r\n    lastUpdated: \"2023-09-18\"\r\n  },\r\n  \"321654987012\": {\r\n    aadhaarNumber: \"321654987012\",\r\n    name: \"Mohammed Ali Khan\",\r\n    dateOfBirth: \"1982-07-28\",\r\n    gender: \"Male\",\r\n    fatherName: \"Abdul Rahman Khan\",\r\n    address: {\r\n      houseNumber: \"67\",\r\n      street: \"Commercial Street\",\r\n      area: \"Fraser Town\",\r\n      city: \"Bangalore\",\r\n      state: \"Karnataka\",\r\n      pincode: \"560005\"\r\n    },\r\n    mobileNumber: \"+91-9876543214\",\r\n    email: \"mohammed.ali@email.com\",\r\n    photo: \"/api/placeholder/aadhaar-photo\",\r\n    isValid: true,\r\n    lastUpdated: \"2023-08-12\"\r\n  }\r\n};\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { aadhaarNumber, otp } = body;\r\n\r\n    // Simulate API processing delay\r\n    await new Promise(resolve => setTimeout(resolve, 1500));\r\n\r\n    // Validate Aadhaar number format\r\n    if (!aadhaarNumber || aadhaarNumber.length !== 12 || !/^\\d{12}$/.test(aadhaarNumber)) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: {\r\n          code: \"INVALID_AADHAAR\",\r\n          message: \"Invalid Aadhaar number format\"\r\n        }\r\n      }, { status: 400 });\r\n    }\r\n\r\n    // Simulate OTP validation (for demo, any 6-digit number is valid)\r\n    if (otp && (otp.length !== 6 || !/^\\d{6}$/.test(otp))) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: {\r\n          code: \"INVALID_OTP\",\r\n          message: \"Invalid OTP format\"\r\n        }\r\n      }, { status: 400 });\r\n    }\r\n\r\n    // Check if Aadhaar exists in mock database\r\n    const aadhaarData = mockAadhaarDB[aadhaarNumber as keyof typeof mockAadhaarDB];\r\n\r\n    if (!aadhaarData) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: {\r\n          code: \"AADHAAR_NOT_FOUND\",\r\n          message: \"Aadhaar number not found in UIDAI database\"\r\n        }\r\n      }, { status: 404 });\r\n    }\r\n\r\n    // Return verification result\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        aadhaarNumber: aadhaarData.aadhaarNumber,\r\n        name: aadhaarData.name,\r\n        dateOfBirth: aadhaarData.dateOfBirth,\r\n        gender: aadhaarData.gender,\r\n        fatherName: aadhaarData.fatherName,\r\n        address: {\r\n          fullAddress: `${aadhaarData.address.houseNumber} ${aadhaarData.address.street}, ${aadhaarData.address.area}, ${aadhaarData.address.city}, ${aadhaarData.address.state} - ${aadhaarData.address.pincode}`,\r\n          ...aadhaarData.address\r\n        },\r\n        mobileNumber: aadhaarData.mobileNumber,\r\n        email: aadhaarData.email,\r\n        verificationStatus: \"VERIFIED\",\r\n        verificationTimestamp: new Date().toISOString(),\r\n        transactionId: `AADHAAR_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\r\n      },\r\n      meta: {\r\n        apiVersion: \"v2.5\",\r\n        provider: \"UIDAI\",\r\n        responseTime: \"1.2s\"\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Aadhaar verification error:', error);\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: {\r\n        code: \"INTERNAL_ERROR\",\r\n        message: \"Internal server error during Aadhaar verification\"\r\n      }\r\n    }, { status: 500 });\r\n  }\r\n}\r\n\r\n// Generate OTP for Aadhaar verification\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const { searchParams } = new URL(request.url);\r\n    const aadhaarNumber = searchParams.get('aadhaar');\r\n\r\n    if (!aadhaarNumber || aadhaarNumber.length !== 12) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: {\r\n          code: \"INVALID_AADHAAR\",\r\n          message: \"Invalid Aadhaar number\"\r\n        }\r\n      }, { status: 400 });\r\n    }\r\n\r\n    // Simulate OTP generation delay\r\n    await new Promise(resolve => setTimeout(resolve, 800));\r\n\r\n    // Check if Aadhaar exists\r\n    const aadhaarData = mockAadhaarDB[aadhaarNumber as keyof typeof mockAadhaarDB];\r\n\r\n    if (!aadhaarData) {\r\n      return NextResponse.json({\r\n        success: false,\r\n        error: {\r\n          code: \"AADHAAR_NOT_FOUND\",\r\n          message: \"Aadhaar number not found\"\r\n        }\r\n      }, { status: 404 });\r\n    }\r\n\r\n    // Return OTP sent confirmation (in real scenario, OTP would be sent to registered mobile)\r\n    return NextResponse.json({\r\n      success: true,\r\n      data: {\r\n        message: \"OTP sent successfully\",\r\n        maskedMobile: aadhaarData.mobileNumber.replace(/(\\+91-)(\\d{3})(\\d{4})(\\d{3})/, '$1$2****$4'),\r\n        transactionId: `OTP_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n        otpValidFor: \"10 minutes\",\r\n        // For demo purposes, we'll include the OTP (in production, this would never be returned)\r\n        demoOtp: \"123456\"\r\n      },\r\n      meta: {\r\n        apiVersion: \"v2.5\",\r\n        provider: \"UIDAI\"\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('OTP generation error:', error);\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: {\r\n        code: \"INTERNAL_ERROR\",\r\n        message: \"Internal server error during OTP generation\"\r\n      }\r\n    }, { status: 500 });\r\n  }\r\n}"],"names":[],"mappings":"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","ignoreList":[0]}