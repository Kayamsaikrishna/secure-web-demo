{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { withAuth } from \"next-auth/middleware\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\nconst publicPaths = [\r\n  \"/\",\r\n  \"/login\",\r\n  \"/register\",\r\n  \"/admin/setup\",\r\n  \"/api/auth/register\",\r\n  \"/api/admin/setup\"\r\n];\r\n\r\nexport default withAuth(\r\n  function middleware(req) {\r\n    const path = req.nextUrl.pathname;\r\n    const token = req.nextauth.token;\r\n\r\n    // Allow public paths and static assets\r\n    if (publicPaths.includes(path) || \r\n        path.startsWith(\"/_next\") || \r\n        path.startsWith(\"/api/auth\")) {\r\n      return NextResponse.next();\r\n    }\r\n\r\n    // Special case for admin setup\r\n    if (path === \"/admin/setup\" || path === \"/api/admin/setup\") {\r\n      return NextResponse.next();\r\n    }\r\n\r\n    // If no token and not on a public path, redirect to login\r\n    if (!token) {\r\n      const loginUrl = new URL(\"/login\", req.url);\r\n      loginUrl.searchParams.set(\"callbackUrl\", req.url);\r\n      return NextResponse.redirect(loginUrl);\r\n    }\r\n\r\n    // Protected admin routes (except setup)\r\n    if (path.startsWith(\"/admin\") && path !== \"/admin/setup\" && token?.role !== \"ADMIN\") {\r\n      return NextResponse.redirect(new URL(\"/dashboard\", req.url));\r\n    }\r\n\r\n    // Allow access for authenticated users\r\n    return NextResponse.next();\r\n  },\r\n  {\r\n    callbacks: {\r\n      authorized: ({ req, token }) => {\r\n        const path = req.nextUrl.pathname;\r\n        // Allow public paths without authentication\r\n        if (publicPaths.includes(path) || \r\n            path.startsWith(\"/_next\") || \r\n            path.startsWith(\"/api/auth\")) {\r\n          return true;\r\n        }\r\n        // Require authentication for all other routes\r\n        return !!token;\r\n      },\r\n    },\r\n  }\r\n);\r\n\r\nexport const config = {\r\n  matcher: [\r\n    /*\r\n     * Match all request paths except for the ones starting with:\r\n     * - _next/static (static files)\r\n     * - _next/image (image optimization files)\r\n     * - favicon.ico (favicon file)\r\n     * - public folder\r\n     */\r\n    \"/((?!_next/static|_next/image|favicon.ico|public/).*)\",\r\n  ],\r\n};\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAAA;;;AAEA,MAAM,cAAc;IAClB;IACA;IACA;IACA;IACA;IACA;CACD;uCAEc,IAAA,8JAAQ,EACrB,SAAS,WAAW,GAAG;IACrB,MAAM,OAAO,IAAI,OAAO,CAAC,QAAQ;IACjC,MAAM,QAAQ,IAAI,QAAQ,CAAC,KAAK;IAEhC,uCAAuC;IACvC,IAAI,YAAY,QAAQ,CAAC,SACrB,KAAK,UAAU,CAAC,aAChB,KAAK,UAAU,CAAC,cAAc;QAChC,OAAO,gMAAY,CAAC,IAAI;IAC1B;IAEA,+BAA+B;IAC/B,IAAI,SAAS,kBAAkB,SAAS,oBAAoB;QAC1D,OAAO,gMAAY,CAAC,IAAI;IAC1B;IAEA,0DAA0D;IAC1D,IAAI,CAAC,OAAO;QACV,MAAM,WAAW,IAAI,IAAI,UAAU,IAAI,GAAG;QAC1C,SAAS,YAAY,CAAC,GAAG,CAAC,eAAe,IAAI,GAAG;QAChD,OAAO,gMAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,wCAAwC;IACxC,IAAI,KAAK,UAAU,CAAC,aAAa,SAAS,kBAAkB,OAAO,SAAS,SAAS;QACnF,OAAO,gMAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,IAAI,GAAG;IAC5D;IAEA,uCAAuC;IACvC,OAAO,gMAAY,CAAC,IAAI;AAC1B,GACA;IACE,WAAW;QACT,YAAY,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE;YACzB,MAAM,OAAO,IAAI,OAAO,CAAC,QAAQ;YACjC,4CAA4C;YAC5C,IAAI,YAAY,QAAQ,CAAC,SACrB,KAAK,UAAU,CAAC,aAChB,KAAK,UAAU,CAAC,cAAc;gBAChC,OAAO;YACT;YACA,8CAA8C;YAC9C,OAAO,CAAC,CAAC;QACX;IACF;AACF;AAGK,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;KAMC,GACD;KACD;AACH"}}]
}